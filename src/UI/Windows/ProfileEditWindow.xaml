<Window x:Class="DisplayProfileManager.UI.Windows.ProfileEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DisplayProfileManager.UI.Windows"
        xmlns:converters="clr-namespace:DisplayProfileManager.UI.Converters"
        xmlns:controls="clr-namespace:DisplayProfileManager.UI.Controls"
        mc:Ignorable="d"
        Title="Profile Editor" Height="500" Width="700" 
        WindowStartupLocation="CenterOwner" ResizeMode="CanResize"
        WindowStyle="SingleBorderWindow"
        Loaded="Window_Loaded">
    
    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="32"
            ResizeBorderThickness="0"
            CornerRadius="0"
            GlassFrameThickness="0,32,0,0"
            UseAeroCaptionButtons="True" />
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="{DynamicResource SecondaryButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryButtonForegroundBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryButtonHoverBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryButtonPressedBackgroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>


        <Style x:Key="ModernTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <Style x:Key="LabelTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ModernTextBlockStyle}">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>

        <Style x:Key="WindowControlButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource WindowControlHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ControlPressedBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowControlButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource CloseButtonHoverBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource CloseButtonHoverBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="{DynamicResource WindowBackgroundBrush}">
        <Grid.RowDefinitions>
            <!-- Title bar area (32px normal, 40px maximized) -->
            <RowDefinition Name="TitleBarRowDefinition" Height="32"/>
            <!-- Main content area -->
            <RowDefinition Height="*"/>
            <!-- Footer area -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Title Bar Area -->
        <Grid Grid.Row="0" Name="TitleBarGrid" Background="{DynamicResource TitleBarBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <!-- Dynamic title based on edit mode -->
            <TextBlock Grid.Column="0" Name="TitleBarTextBlock" Text="Profile Editor" 
                       VerticalAlignment="Center" 
                       Margin="12,0,0,0"
                       FontFamily="Segoe UI" 
                       FontSize="12" 
                       Foreground="{DynamicResource TitleBarTextBrush}"/>
            
            <!-- Window Control Buttons -->
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <!-- Minimize Button -->
                <Button Name="MinimizeButton" 
                        Content="&#xE921;" 
                        Style="{StaticResource WindowControlButtonStyle}"
                        Click="MinimizeButton_Click"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        ToolTip="Minimize"/>
                
                <!-- Close Button -->
                <Button Name="CloseButton" 
                        Content="&#xE8BB;" 
                        Style="{StaticResource WindowCloseButtonStyle}"
                        Click="CloseButton_Click"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        ToolTip="Close"/>
            </StackPanel>
        </Grid>

        <!-- Main Content Area -->
        <ScrollViewer Grid.Row="1" Padding="16" VerticalScrollBarVisibility="Auto" Margin="16,16,16,0">
            <StackPanel>
                <TextBlock Text="Profile Information" 
                           Style="{StaticResource LabelTextBlockStyle}" 
                           FontSize="16" Margin="0,0,0,12"/>

                <Grid Margin="0,0,0,16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Profile Name*" Style="{StaticResource LabelTextBlockStyle}"/>
                        <TextBox Name="ProfileNameTextBox" 
                                 Style="{StaticResource ModernTextBoxStyle}" 
                                 MaxLength="50"
                                 Foreground="{DynamicResource PrimaryTextBrush}"/>
                    </StackPanel>

                    <StackPanel Grid.Column="2">
                        <TextBlock Text="Set as Default" Style="{StaticResource LabelTextBlockStyle}"/>
                        <CheckBox Name="DefaultProfileCheckBox" 
                                  Content="Make this the default profile" 
                                  FontSize="14" VerticalAlignment="Center"
                                  Foreground="{DynamicResource PrimaryTextBrush}"/>
                    </StackPanel>
                </Grid>

                <StackPanel Margin="0,0,0,24">
                    <TextBlock Text="Description" Style="{StaticResource LabelTextBlockStyle}"/>
                    <TextBox Name="ProfileDescriptionTextBox" 
                             Style="{StaticResource ModernTextBoxStyle}" 
                             Height="60" TextWrapping="Wrap" 
                             VerticalScrollBarVisibility="Auto" 
                             AcceptsReturn="True"
                             Foreground="{DynamicResource PrimaryTextBrush}"/>
                </StackPanel>

                <!-- Global Hotkey Section -->
                <StackPanel Margin="0,0,0,24">
                    <Grid>
                        <TextBlock Text="Global Hotkey (Optional)" 
                                   Style="{StaticResource LabelTextBlockStyle}"/>
                        <TextBlock Text="Press ESC to clear" 
                                   FontSize="11" 
                                   Opacity="0.7" 
                                   HorizontalAlignment="Right"
                                   Foreground="{DynamicResource TertiaryTextBrush}"/>
                    </Grid>
                    
                    <Grid Margin="0,4,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <controls:HotkeyEditorControl x:Name="HotkeyEditor" 
                                                      Grid.Row="0"
                                                      HotkeyChanged="HotkeyEditor_HotkeyChanged"/>
                        
                        <TextBlock x:Name="ConflictWarning" 
                                   Grid.Row="1"
                                   Text="⚠ Already assigned to another profile" 
                                   Foreground="#FF6B35" 
                                   Visibility="Collapsed" 
                                   Margin="0,4,0,0"
                                   FontSize="12"/>
                        
                        <CheckBox Name="EnableHotkeyCheckBox" 
                                  Grid.Row="2"
                                  Content="Enable global hotkey for this profile" 
                                  FontSize="14"
                                  Margin="0,8,0,0"
                                  Foreground="{DynamicResource PrimaryTextBrush}"
                                  Checked="EnableHotkeyCheckBox_Checked"
                                  Unchecked="EnableHotkeyCheckBox_Unchecked"/>
                    </Grid>
                </StackPanel>

                <Grid Margin="0,0,0,16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Display Settings" 
                               Style="{StaticResource LabelTextBlockStyle}" 
                               FontSize="16" VerticalAlignment="Center"/>

                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Button Name="DetectDisplaysButton" Content="Detect Current" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                Margin="0,0,8,0" Click="DetectDisplaysButton_Click"/>
                        <Button Name="AddDisplayButton" Content="+ Add Display" 
                                Style="{StaticResource ModernButtonStyle}" 
                                Click="AddDisplayButton_Click"/>
                    </StackPanel>
                </Grid>

                <Border Background="{DynamicResource ContentBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" MinHeight="200">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="16">
                        <StackPanel Name="DisplaySettingsPanel">
                            <TextBlock Text="No display settings configured. Click 'Detect Current' to auto-configure or 'Add Display' to manually add displays." 
                                       Style="{StaticResource ModernTextBlockStyle}" 
                                       Foreground="{DynamicResource TertiaryTextBrush}" 
                                       TextAlignment="Center" 
                                       TextWrapping="Wrap" 
                                       Margin="32"/>
                        </StackPanel>
                    </ScrollViewer>
                </Border>

                <!-- Audio Settings Section -->
                <Grid Margin="0,24,0,16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Audio Settings" 
                               Style="{StaticResource LabelTextBlockStyle}" 
                               FontSize="16" VerticalAlignment="Center"/>

                    <Button Grid.Column="1" Name="DetectAudioButton" Content="Detect Current Audio" 
                            Style="{StaticResource SecondaryButtonStyle}" 
                            Click="DetectAudioButton_Click"/>
                </Grid>


                <Border Background="{DynamicResource ContentBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" Padding="16">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="16"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Output Device (Playback) -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="Output Device:" 
                                       Style="{StaticResource LabelTextBlockStyle}" 
                                       VerticalAlignment="Center"/>

                            <CheckBox Grid.Column="1" Name="ApplyOutputDeviceCheckBox" 
                                      Content="Apply" 
                                      FontSize="14" 
                                      Margin="0,0,8,0"
                                      VerticalAlignment="Center"
                                      Foreground="{DynamicResource PrimaryTextBrush}"
                                      ToolTip="When checked, this profile will change the output device when applied"
                                      Checked="ApplyOutputDeviceCheckBox_Checked"
                                      Unchecked="ApplyOutputDeviceCheckBox_Unchecked"/>

                            <ComboBox Grid.Column="2" Name="OutputDeviceComboBox" 
                                      Style="{StaticResource ModernComboBoxStyle}"
                                      Height="32"
                                      IsEnabled="False"
                                      SelectionChanged="OutputDeviceComboBox_SelectionChanged">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Padding" Value="8,4"/>
                                        <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ComboBoxItemHoverBackgroundBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackgroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Grid>

                        <!-- Input Device (Capture) -->
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="Input Device:" 
                                       Style="{StaticResource LabelTextBlockStyle}" 
                                       VerticalAlignment="Center"/>

                            <CheckBox Grid.Column="1" Name="ApplyInputDeviceCheckBox" 
                                      Content="Apply" 
                                      FontSize="14" 
                                      Margin="0,0,8,0"
                                      VerticalAlignment="Center"
                                      Foreground="{DynamicResource PrimaryTextBrush}"
                                      ToolTip="When checked, this profile will change the input device when applied"
                                      Checked="ApplyInputDeviceCheckBox_Checked"
                                      Unchecked="ApplyInputDeviceCheckBox_Unchecked"/>

                            <ComboBox Grid.Column="2" Name="InputDeviceComboBox" 
                                      Style="{StaticResource ModernComboBoxStyle}"
                                      Height="32"
                                      IsEnabled="False"
                                      SelectionChanged="InputDeviceComboBox_SelectionChanged">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Padding" Value="8,4"/>
                                        <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ComboBoxItemHoverBackgroundBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackgroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Grid>
                    </Grid>
                </Border>
            </StackPanel>
        </ScrollViewer>

        <Border Grid.Row="2" Background="{DynamicResource ContentBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,0,0" Padding="24,16">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Name="StatusTextBlock" 
                           Text="Ready" 
                           Style="{StaticResource ModernTextBlockStyle}" 
                           FontSize="12" Foreground="{DynamicResource TertiaryTextBrush}" 
                           VerticalAlignment="Center"/>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button Name="CancelButton" Content="Cancel" 
                            Style="{StaticResource SecondaryButtonStyle}" 
                            Width="80" Margin="0,0,8,0" 
                            Click="CancelButton_Click"/>
                    <Button Name="SaveButton" Content="Save" 
                            Style="{StaticResource ModernButtonStyle}" 
                            Width="80" Click="SaveButton_Click"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>